{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["import {\n  RtcTokenBuilder,\n  RtmTokenBuilder,\n  RtcRole,\n  RtmRole,\n} from \"agora-access-token\";\n\nimport dotenv from \"dotenv\";\nconst env = dotenv.config({ path: \"./.env\" });\n\n/**\n * @param {dotenv.DotenvConfigOutput} env\n * @returns {void}\n */\nconst main = (env) => {\n  /** @type {string} */\n  const appId = env.parsed[\"AGORA_APP_ID\"];\n  /** @type {string} */\n  const appCertificate = env.parsed[\"AGORA_APP_CERT\"];\n  const channelName = \"aijent934ytlnwejvf3lyt485tvhkfsk\";\n  const uid = 0;\n  const role = RtcRole.PUBLISHER;\n  const expirationTimeInSeconds = 3600;\n  const currentTimestamp = Math.floor(Date.now() / 1000);\n  const privilegeExpiredTs = currentTimestamp + expirationTimeInSeconds;\n  // Build token with uid\n  const tokenA = RtcTokenBuilder.buildTokenWithUid(\n    appId,\n    appCertificate,\n    channelName,\n    uid,\n    role,\n    privilegeExpiredTs\n  );\n  console.log(\"Token with integer number Uid: \" + tokenA);\n};\nmain(env);\n"],"names":["RtcRole","RtcTokenBuilder"],"mappings":";;;;;;EAQA,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;AAC9C;EACA;EACA;EACA;EACA;EACA,MAAM,IAAI,GAAG,CAAC,GAAG,KAAK;EACtB;EACA,EAAE,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;EAC3C;EACA,EAAE,MAAM,cAAc,GAAG,GAAG,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;EACtD,EAAE,MAAM,WAAW,GAAG,kCAAkC,CAAC;EACzD,EAAE,MAAM,GAAG,GAAG,CAAC,CAAC;EAChB,EAAE,MAAM,IAAI,GAAGA,wBAAO,CAAC,SAAS,CAAC;EACjC,EAAE,MAAM,uBAAuB,GAAG,IAAI,CAAC;EACvC,EAAE,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;EACzD,EAAE,MAAM,kBAAkB,GAAG,gBAAgB,GAAG,uBAAuB,CAAC;EACxE;EACA,EAAE,MAAM,MAAM,GAAGC,gCAAe,CAAC,iBAAiB;EAClD,IAAI,KAAK;EACT,IAAI,cAAc;EAClB,IAAI,WAAW;EACf,IAAI,GAAG;EACP,IAAI,IAAI;EACR,IAAI,kBAAkB;EACtB,GAAG,CAAC;EACJ,EAAE,OAAO,CAAC,GAAG,CAAC,iCAAiC,GAAG,MAAM,CAAC,CAAC;EAC1D,CAAC,CAAC;EACF,IAAI,CAAC,GAAG,CAAC;;;;;;"}